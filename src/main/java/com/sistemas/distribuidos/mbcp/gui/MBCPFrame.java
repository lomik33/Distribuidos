/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sistemas.distribuidos.mbcp.gui;

import com.sistemas.distribuidos.mbcp.UDPClient;
import com.sistemas.distribuidos.mbcp.UDPServer;
import com.sistemas.distribuidos.mbcp.implementacion.MBCPAlgoritmo;
import com.sistemas.distribuidos.mbcp.implementacion.Mensaje;
import java.io.IOException;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author lomik
 */
public class MBCPFrame extends javax.swing.JFrame {

    private int procesoSeleccionado;
    private final int puertoInicial = 6788;
   
    private Thread threadReceive;
    private UDPServer udpServer;
    private Mensaje mensajeSeleccionado;
    private final ArrayList<MensajeEnviado> mensajesEnviados;
    private MBCPAlgoritmo mbcp = null;

    /**
     * Creates new form MBCPFrame
     */
    public MBCPFrame() {
      
        initComponents();
        this.habilitarSeccionConstruccion(false);
        this.mensajesEnviados = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEnviarProceso1 = new javax.swing.JButton();
        txtMensaje = new javax.swing.JTextField();
        lblRespuesta = new javax.swing.JLabel();
        lblSeleccionarProceso = new javax.swing.JLabel();
        btnLanzar = new javax.swing.JButton();
        lblEstatus = new javax.swing.JLabel();
        comboProcesos = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        listMensajesEnviados = new javax.swing.JList<>();
        btnEnviarProceso2 = new javax.swing.JButton();
        btnEnviarProceso3 = new javax.swing.JButton();
        btnEnviarProceso4 = new javax.swing.JButton();
        btnEnviarProceso5 = new javax.swing.JButton();
        btnEnviarProceso6 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listMensajesRecibidos = new javax.swing.JList<>();
        lblRespuesta1 = new javax.swing.JLabel();
        lblFifo = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listFifo = new javax.swing.JList<>();
        btnCrearMensaje = new javax.swing.JButton();
        lblMensajeSeleccionado = new javax.swing.JLabel();
        lblMbcp = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnEnviarProceso1.setText("Enviar Proceso 1");
        btnEnviarProceso1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarProceso1ActionPerformed(evt);
            }
        });

        lblRespuesta.setText("MENSAJES CONSTRUIDOS");

        lblSeleccionarProceso.setText("SELECCIONE UN PROCESO");

        btnLanzar.setText("INICIAR");
        btnLanzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLanzarActionPerformed(evt);
            }
        });

        lblEstatus.setText("ESCRIBE MENSAJE");

        comboProcesos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PROCESO 1", "PROCESO 2", "PROCESO 3", "PROCESO 4", "PROCESO 5", "PROCESO 6" }));

        listMensajesEnviados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMensajesEnviadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listMensajesEnviados);

        btnEnviarProceso2.setText("Enviar Proceso 2");
        btnEnviarProceso2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarProceso2ActionPerformed(evt);
            }
        });

        btnEnviarProceso3.setText("Enviar Proceso 3");
        btnEnviarProceso3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarProceso3ActionPerformed(evt);
            }
        });

        btnEnviarProceso4.setText("Enviar Proceso 4");
        btnEnviarProceso4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarProceso4ActionPerformed(evt);
            }
        });

        btnEnviarProceso5.setText("Enviar Proceso 5");
        btnEnviarProceso5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarProceso5ActionPerformed(evt);
            }
        });

        btnEnviarProceso6.setText("Enviar Proceso 6");
        btnEnviarProceso6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarProceso6ActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(listMensajesRecibidos);

        lblRespuesta1.setText("MENSAJES RECIBIDOS");

        lblFifo.setForeground(new java.awt.Color(255, 51, 51));
        lblFifo.setText("MENSAJES EN ESPERA");

        jScrollPane3.setViewportView(listFifo);

        btnCrearMensaje.setText("Crear Mensaje");
        btnCrearMensaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearMensajeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMbcp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtMensaje, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnEnviarProceso1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEnviarProceso2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEnviarProceso3))
                            .addComponent(lblRespuesta))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblRespuesta1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnEnviarProceso4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEnviarProceso5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEnviarProceso6))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEstatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblSeleccionarProceso, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboProcesos, javax.swing.GroupLayout.Alignment.LEADING, 0, 137, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnLanzar)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(240, 240, 240))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFifo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblMensajeSeleccionado, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                    .addComponent(btnCrearMensaje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSeleccionarProceso)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboProcesos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLanzar))
                .addGap(29, 29, 29)
                .addComponent(lblEstatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCrearMensaje))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnviarProceso1)
                    .addComponent(btnEnviarProceso2)
                    .addComponent(btnEnviarProceso3)
                    .addComponent(btnEnviarProceso4)
                    .addComponent(btnEnviarProceso5)
                    .addComponent(btnEnviarProceso6)
                    .addComponent(lblMensajeSeleccionado))
                .addGap(2, 2, 2)
                .addComponent(lblMbcp)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRespuesta)
                    .addComponent(lblRespuesta1)
                    .addComponent(lblFifo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnEnviarProceso1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarProceso1ActionPerformed
        //this.enviarMensaje(1, procesoSeleccionado, puertoInicial + 1, this.txtMensaje.getText());
         try {
            // TODO add your handling code here:

            this.prepararEnvio(1, puertoInicial + 1);
        } catch (UnknownHostException ex) {
            Logger.getLogger(MBCPFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MBCPFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEnviarProceso1ActionPerformed


    /***
     * Metodo que corre el servidor en un puerto inicial 6788 se incrementa el numero de proceso que sea
     * por ejemplo 6788+1 (en caso de ser proceso uno)
     * @param evt 
     */
    private void btnLanzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLanzarActionPerformed
        try {
            procesoSeleccionado = (this.comboProcesos.getSelectedIndex() + 1);
            this.mbcp = new MBCPAlgoritmo(procesoSeleccionado,this.listMensajesRecibidos,this.listFifo,this.lblMbcp);
      
            int puertoProceso = puertoInicial + (procesoSeleccionado);
            udpServer = new UDPServer(puertoProceso, this.mbcp.mensajesRecibidos, this.mbcp,true);
            // TODO add your handling code here:
            threadReceive = new Thread(udpServer);
            threadReceive.start();
            this.lblSeleccionarProceso.setText(this.comboProcesos.getSelectedItem().toString() + " INICIADO EN PUERTO:" + puertoProceso);
            this.btnLanzar.setEnabled(false);
            this.habilitarSeccionConstruccion(true);
            this.comboProcesos.setEnabled(false);
            this.habilitaBotonesEnvio(false);
            this.lblMbcp.setText(this.mbcp.toString());

        } catch (SocketException ex) {
            Logger.getLogger(MBCPFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnLanzarActionPerformed

    private void btnEnviarProceso2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarProceso2ActionPerformed
        try {
            // TODO add your handling code here:

            this.prepararEnvio(2, puertoInicial + 2);
        } catch (UnknownHostException ex) {
            Logger.getLogger(MBCPFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MBCPFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnEnviarProceso2ActionPerformed

    private void btnEnviarProceso3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarProceso3ActionPerformed
        // TODO add your handling code here:
        //this.enviarMensaje(3,procesoSeleccionado, puertoInicial + 3, this.txtMensaje.getText());
         try {
            // TODO add your handling code here:

            this.prepararEnvio(3, puertoInicial + 3);
        } catch (UnknownHostException ex) {
            Logger.getLogger(MBCPFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MBCPFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEnviarProceso3ActionPerformed

    private void btnEnviarProceso4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarProceso4ActionPerformed
        // TODO add your handling code here:
        //this.enviarMensaje(4,procesoSeleccionado, puertoInicial + 4, this.txtMensaje.getText());
         try {
            // TODO add your handling code here:

            this.prepararEnvio(4, puertoInicial + 4);
        } catch (UnknownHostException ex) {
            Logger.getLogger(MBCPFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MBCPFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEnviarProceso4ActionPerformed

    private void btnEnviarProceso5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarProceso5ActionPerformed
        // TODO add your handling code here:
        //this.enviarMensaje(5,procesoSeleccionado, puertoInicial + 5, this.txtMensaje.getText());
         try {
            // TODO add your handling code here:

            this.prepararEnvio(5, puertoInicial + 5);
        } catch (UnknownHostException ex) {
            Logger.getLogger(MBCPFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MBCPFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEnviarProceso5ActionPerformed

    private void btnEnviarProceso6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarProceso6ActionPerformed
        // TODO add your handling code here:
        //this.enviarMensaje(6,procesoSeleccionado, puertoInicial + 6, this.txtMensaje.getText());
         try {
            // TODO add your handling code here:

            this.prepararEnvio(6, puertoInicial + 6);
        } catch (UnknownHostException ex) {
            Logger.getLogger(MBCPFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MBCPFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEnviarProceso6ActionPerformed

    private boolean existeMensajeEnviado(int procesoDestino) {
        boolean existe = false;
        for (MensajeEnviado mensajeEnviado : this.mensajesEnviados) {
            if (mensajeEnviado.getProceso() == procesoDestino
                    && mensajeEnviado.mensaje.getK() == mensajeSeleccionado.getK()
                    && mensajeEnviado.mensaje.getTk() == mensajeSeleccionado.getTk()) {
                existe = true;
                break;
            }
        }
        return existe;
    }

    private void habilitaBotonesEnvio(boolean enabled) {

        this.btnEnviarProceso1.setEnabled(enabled);
        this.btnEnviarProceso2.setEnabled(enabled);
        this.btnEnviarProceso3.setEnabled(enabled);
        this.btnEnviarProceso4.setEnabled(enabled);
        this.btnEnviarProceso5.setEnabled(enabled);
        this.btnEnviarProceso6.setEnabled(enabled);
        switch (procesoSeleccionado) {
            case 1:
                this.btnEnviarProceso1.setEnabled(false);

                break;
            case 2:
                this.btnEnviarProceso2.setEnabled(false);

                break;

            case 3:
                this.btnEnviarProceso3.setEnabled(false);
                break;

            case 4:
                this.btnEnviarProceso4.setEnabled(false);
                break;

            case 5:
                this.btnEnviarProceso5.setEnabled(false);

                break;

            case 6:
                this.btnEnviarProceso6.setEnabled(false);

                break;

        }
    }

    private void prepararEnvio(int procesoDestino, int puertoServidor) throws SocketException, UnknownHostException, IOException {

        if (this.mensajeSeleccionado == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un mensaje para poder enviarlo al proceso.");
        } else {
            if (this.existeMensajeEnviado(procesoDestino)) {
                JOptionPane.showMessageDialog(this, "El mensaje ya fue enviado al proceso");
            } else {

                String direccion = this.udpServer.getDirecciones().get(procesoDestino);
                if (direccion.equals("")) {
                    JOptionPane.showMessageDialog(null, "No se conoce la direeccion logica del proceso porque aun no se han recibido mensajes");
                } else {
                    UDPClient client = new UDPClient(direccion, puertoServidor);
                    String respuesta = client.send(this.mensajeSeleccionado);
                    if (respuesta != null) {
                        this.mensajesEnviados.add(new MensajeEnviado(procesoDestino, this.mensajeSeleccionado));
                        this.lblMbcp.setText(this.mbcp.toString());
                    }
                }

            }
        }
    }
    private void btnCrearMensajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearMensajeActionPerformed
        // TODO add your handling code here:
        Mensaje mensaje = this.mbcp.construirMensaje(this.txtMensaje.getText());
        this.listMensajesEnviados.setListData((String[]) this.mbcp.getListConstruidos());
        this.lblMensajeSeleccionado.setText(mensaje.toString());
         this.lblMbcp.setText(this.mbcp.toString());
    }//GEN-LAST:event_btnCrearMensajeActionPerformed

    private void listMensajesEnviadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMensajesEnviadosMouseClicked
        // TODO add your handling code here:
        int indiceSeleccionado = this.listMensajesEnviados.getSelectedIndex();

        if (indiceSeleccionado >= 0) {
            mensajeSeleccionado = this.mbcp.getMensajesConstruidos().get(indiceSeleccionado);
            if (mensajeSeleccionado != null) {
                this.lblMensajeSeleccionado.setText(mensajeSeleccionado.toString());
                //Consulto si ese mensaje ya fue enviado a cada proceso si ya entonces deshabilito el boton
                this.habilitaBotonesEnvio(true);
                for (int i = 1; i <= 6; i++) {
                    boolean existe = this.existeMensajeEnviado(i);
                    if (existe) {
                        switch (i) {
                            case 1:
                                this.btnEnviarProceso1.setEnabled(false);
                                break;
                            case 2:
                                this.btnEnviarProceso2.setEnabled(false);
                                break;
                            case 3:
                                this.btnEnviarProceso3.setEnabled(false);
                                break;
                            case 4:
                                this.btnEnviarProceso4.setEnabled(false);
                                break;
                            case 5:
                                this.btnEnviarProceso5.setEnabled(false);
                                break;
                            case 6:
                                this.btnEnviarProceso6.setEnabled(false);
                                break;
                        }
                    }
                }

            }
        }
        //JOptionPane.showMessageDialog(this,"El index seleccionado es "+this.listMensajesEnviados.getSelectedIndex());

    }//GEN-LAST:event_listMensajesEnviadosMouseClicked

    /**
     * *
     * Método que habilita o deshabilita la interfaz para envio de mensajes
     *
     * @param enabled
     */
    private void habilitarSeccionConstruccion(boolean enabled) {
        this.btnEnviarProceso1.setEnabled(enabled);
        this.btnEnviarProceso2.setEnabled(enabled);
        this.btnEnviarProceso3.setEnabled(enabled);
        this.btnEnviarProceso4.setEnabled(enabled);
        this.btnEnviarProceso5.setEnabled(enabled);
        this.btnEnviarProceso6.setEnabled(enabled);
        this.btnCrearMensaje.setEnabled(enabled);
        this.listMensajesEnviados.setEnabled(enabled);
        this.listMensajesRecibidos.setEnabled(enabled);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrearMensaje;
    private javax.swing.JButton btnEnviarProceso1;
    private javax.swing.JButton btnEnviarProceso2;
    private javax.swing.JButton btnEnviarProceso3;
    private javax.swing.JButton btnEnviarProceso4;
    private javax.swing.JButton btnEnviarProceso5;
    private javax.swing.JButton btnEnviarProceso6;
    private javax.swing.JButton btnLanzar;
    private javax.swing.JComboBox<String> comboProcesos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblEstatus;
    private javax.swing.JLabel lblFifo;
    private javax.swing.JLabel lblMbcp;
    private javax.swing.JLabel lblMensajeSeleccionado;
    private javax.swing.JLabel lblRespuesta;
    private javax.swing.JLabel lblRespuesta1;
    private javax.swing.JLabel lblSeleccionarProceso;
    private javax.swing.JList<String> listFifo;
    private javax.swing.JList<String> listMensajesEnviados;
    private javax.swing.JList<String> listMensajesRecibidos;
    private javax.swing.JTextField txtMensaje;
    // End of variables declaration//GEN-END:variables
}


/**
 * *
 * Clase para mantener un historial de los mensajes que ya fueron enviados
 *
 * @author lomik
 */
class MensajeEnviado {

    int proceso;
    Mensaje mensaje;

    public int getProceso() {
        return proceso;
    }

    public void setProceso(int proceso) {
        this.proceso = proceso;
    }

    public Mensaje getMensaje() {
        return mensaje;
    }

    public void setMensaje(Mensaje mensaje) {
        this.mensaje = mensaje;
    }

    public MensajeEnviado(int proceso, Mensaje mensaje) {
        this.proceso = proceso;
        this.mensaje = mensaje;
    }

}
